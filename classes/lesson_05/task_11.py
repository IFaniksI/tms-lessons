# * Написать функцию xor_cipher, принимающая 2 аргумента: строку, которую нужно зашифровать,
# и ключ шифрования (целое число), которая возвращает строку,
# зашифрованную путем применения функции XOR (^) над символами строки с ключом. Написать также функцию xor_uncipher,
# которая по зашифрованной строке и ключу восстанавливает исходную строку. Подсказка: см. функции ord и chr.
# * Старайтесь использовать аннотации

def xor_cipher(string: str, key: int) -> str:
    return ''.join([chr(ord(i) ^ key) for i in string])


xor_uncipher = xor_cipher
assert xor_cipher("Hello world!", 2) == 'Jgnnm"umpnf#'
assert xor_uncipher('Jgnnm"umpnf#', 2) == "Hello world!"

'''
Объясняю логику
1 XOR (^) 0 = 1
0 XOR (^) 0 = 0
0 XOR (^) 1 = 1
1 XOR (^) 1 = 0

мы берем символ W, переводим в числовое представление ord(), а после XOR (^) переводит в двоичную систему и шифрует
1001000 = 72 = W
0000010 = 2
1001010 = 74 = J
'''